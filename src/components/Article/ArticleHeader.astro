---
import type { BlogPost } from '../../lib/types';

interface Props {
  frontmatter: BlogPost;
}

const { frontmatter } = Astro.props;
const formattedDate = new Date(frontmatter.pubDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<header class="article-header">
  <div class="header-content">
    <div class="title-wrapper">
      <h1 class="title">{frontmatter.title}</h1>
      <div class="decorative-line"></div>
    </div>
    
    <div class="meta-info">
      {frontmatter.author && (
        <div class="author-info">
          <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
            <circle cx="12" cy="7" r="4"/>
          </svg>
          <p class="author">{frontmatter.author}</p>
        </div>
      )}
      <div class="date-info">
        <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <rect x="3" y="4" width="18" height="18" rx="2" ry="2"/>
          <line x1="16" y1="2" x2="16" y2="6"/>
          <line x1="8" y1="2" x2="8" y2="6"/>
          <line x1="3" y1="10" x2="21" y2="10"/>
        </svg>
        <time class="date" datetime={frontmatter.pubDate.toString()}>{formattedDate}</time>
      </div>
    </div>
  </div>
</header>

<style>
  .article-header {
    position: relative;
    padding: clamp(3rem, 8vw, 5rem) clamp(2rem, 5vw, 4rem);
    text-align: center;
    background: var(--color-bg-primary);
    border-bottom: 1px solid var(--color-border);
    overflow: hidden;
  }

  .article-header::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(
      90deg, 
      transparent, 
      var(--color-accent), 
      transparent
    );
    opacity: 0.5;
  }

  .header-content {
    position: relative;
    max-width: 900px;
    margin: 0 auto;
  }

  .title-wrapper {
    position: relative;
    margin-bottom: 2.5rem;
  }

  .title {
    font-family: var(--font-chinese);
    font-size: clamp(2rem, 6vw, 3.5rem);
    line-height: 1.3;
    color: var(--color-text-primary);
    margin: 0;
    padding: 0 1rem;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .decorative-line {
    position: relative;
    width: 100px;
    height: 2px;
    background: var(--color-accent);
    margin: 1.5rem auto 0;
    opacity: 0.7;
  }

  .decorative-line::before,
  .decorative-line::after {
    content: "";
    position: absolute;
    top: 50%;
    width: 4px;
    height: 4px;
    background: var(--color-accent);
    border-radius: 50%;
    transform: translateY(-50%);
  }

  .decorative-line::before {
    left: -8px;
  }

  .decorative-line::after {
    right: -8px;
  }

  .meta-info {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 2rem;
    font-family: var(--font-english);
    color: var(--color-text-secondary);
  }

  .author-info,
  .date-info {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .icon {
    width: 1.2rem;
    height: 1.2rem;
    color: var(--color-accent);
    opacity: 0.8;
  }

  .author {
    font-style: italic;
    font-size: clamp(0.9rem, 2vw, 1.1rem);
    margin: 0;
  }

  .date {
    font-size: clamp(0.9rem, 1.5vw, 1rem);
  }

  @media (max-width: 768px) {
    .article-header {
      padding: 2.5rem 1.5rem;
    }

    .meta-info {
      flex-direction: column;
      gap: 1rem;
    }

    .title {
      font-size: clamp(1.8rem, 5vw, 2.5rem);
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .article-header::before {
      animation: none;
    }
  }
</style>